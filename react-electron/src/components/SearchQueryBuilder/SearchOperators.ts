/**
 * Twitter/X Search Operators Definitions
 * Complete list of all available search operators for building advanced queries
 */

export type OperatorCategory =
  | "basic"
  | "account"
  | "engagement"
  | "datetime"
  | "content"
  | "location"
  | "advanced";

export interface SearchOperator {
  id: string;
  name: string;
  category: OperatorCategory;
  syntax: string;
  description: string;
  example: string;
  inputType: "text" | "tags" | "number" | "date" | "time" | "checkbox" | "select" | "boolean";
  placeholder?: string;
  options?: Array<{ label: string; value: string }>;
  tooltip?: string;
}

export const SEARCH_OPERATORS: SearchOperator[] = [
  // ==================== BASIC OPERATORS ====================
  {
    id: "keywords",
    name: "Keywords",
    category: "basic",
    syntax: "",
    description: "Search for keywords in post body",
    example: "crypto blockchain",
    inputType: "tags",
    placeholder: "Enter keywords...",
    tooltip: "Matches any of these keywords in the post text",
  },
  {
    id: "exactPhrase",
    name: "Exact Phrase",
    category: "basic",
    syntax: '"..."',
    description: "Match exact phrase",
    example: '"crypto wallet"',
    inputType: "tags",
    placeholder: "Enter exact phrases...",
    tooltip: "Wrap phrases in quotes to match them exactly",
  },
  {
    id: "orWords",
    name: "ANY of these words (OR)",
    category: "basic",
    syntax: "(word1 OR word2)",
    description: "Match any of these words",
    example: "(bitcoin OR ethereum OR solana)",
    inputType: "tags",
    placeholder: "Add words for OR condition...",
    tooltip: "Posts must contain at least one of these words",
  },
  {
    id: "notWords",
    name: "Exclude words (NOT)",
    category: "basic",
    syntax: "-word",
    description: "Exclude posts containing these words",
    example: "-scam -spam",
    inputType: "tags",
    placeholder: "Words to exclude...",
    tooltip: "Posts will NOT contain any of these words",
  },
  {
    id: "hashtags",
    name: "Hashtags",
    category: "basic",
    syntax: "#hashtag",
    description: "Search for specific hashtags",
    example: "#bitcoin #crypto",
    inputType: "tags",
    placeholder: "Enter hashtags (with or without #)...",
    tooltip: "Match posts with these hashtags",
  },
  {
    id: "cashtags",
    name: "Cashtags",
    category: "basic",
    syntax: "$cashtag",
    description: "Search for stock/crypto ticker symbols",
    example: "$TSLA $BTC",
    inputType: "tags",
    placeholder: "Enter cashtags (with or without $)...",
    tooltip: "Match posts mentioning these ticker symbols",
  },
  {
    id: "emoji",
    name: "Emoji",
    category: "basic",
    syntax: "ðŸ˜€",
    description: "Search for posts with specific emojis",
    example: "ðŸ˜‚ OR ðŸš€",
    inputType: "text",
    placeholder: "Enter emojis...",
    tooltip: "Match posts containing these emojis",
  },
  {
    id: "proximity",
    name: "Proximity Search",
    category: "basic",
    syntax: '"word1 word2"~N',
    description: "Words within N tokens of each other",
    example: '"social media"~5',
    inputType: "text",
    placeholder: 'e.g., "social media"~5',
    tooltip: "Find words within N words of each other",
  },

  // ==================== ACCOUNT OPERATORS ====================
  {
    id: "from",
    name: "From Account",
    category: "account",
    syntax: "from:",
    description: "Posts from specific accounts",
    example: "from:XDevelopers",
    inputType: "tags",
    placeholder: "Enter usernames (with or without @)...",
    tooltip: "Match posts from these specific accounts",
  },
  {
    id: "to",
    name: "To Account (Replies)",
    category: "account",
    syntax: "to:",
    description: "Replies to specific accounts",
    example: "to:elonmusk",
    inputType: "tags",
    placeholder: "Enter usernames...",
    tooltip: "Match replies directed to these accounts",
  },
  {
    id: "mentions",
    name: "Mentioning Accounts",
    category: "account",
    syntax: "@username",
    description: "Posts mentioning these accounts",
    example: "@OpenAI @Google",
    inputType: "tags",
    placeholder: "Enter usernames to mention...",
    tooltip: "Match posts that mention these accounts",
  },
  {
    id: "retweetsOf",
    name: "Retweets Of",
    category: "account",
    syntax: "retweets_of:",
    description: "Retweets of specific user",
    example: "retweets_of:XDevelopers",
    inputType: "tags",
    placeholder: "Enter usernames...",
    tooltip: "Match retweets of posts from these accounts",
  },
  {
    id: "conversationId",
    name: "Conversation ID",
    category: "account",
    syntax: "conversation_id:",
    description: "Posts in same conversation thread",
    example: "conversation_id:1334987486343299072",
    inputType: "text",
    placeholder: "Enter conversation ID...",
    tooltip: "Match posts in a specific conversation thread",
  },

  // ==================== USER PROFILE OPERATORS ====================
  {
    id: "bio",
    name: "Bio Keywords",
    category: "account",
    syntax: "bio:",
    description: "Search in user bio/description",
    example: 'bio:"software engineer"',
    inputType: "text",
    placeholder: "Keywords in user bio...",
    tooltip: "Match users whose bio contains these keywords",
  },
  {
    id: "bioName",
    name: "Bio Name",
    category: "account",
    syntax: "bio_name:",
    description: "Search in user's display name",
    example: "bio_name:developer",
    inputType: "text",
    placeholder: "Keywords in display name...",
    tooltip: "Match users whose name contains these keywords",
  },
  {
    id: "bioLocation",
    name: "Bio Location",
    category: "account",
    syntax: "bio_location:",
    description: "Search in user's location field",
    example: 'bio_location:"San Francisco"',
    inputType: "text",
    placeholder: "User location...",
    tooltip: "Match users with this location in their profile",
  },

  // ==================== ENGAGEMENT OPERATORS ====================
  {
    id: "minReplies",
    name: "Min Replies",
    category: "engagement",
    syntax: "min_replies:",
    description: "Minimum number of replies",
    example: "min_replies:10",
    inputType: "number",
    placeholder: "0",
    tooltip: "Posts must have at least this many replies",
  },
  {
    id: "minFaves",
    name: "Min Likes",
    category: "engagement",
    syntax: "min_faves:",
    description: "Minimum number of likes",
    example: "min_faves:100",
    inputType: "number",
    placeholder: "0",
    tooltip: "Posts must have at least this many likes",
  },
  {
    id: "minRetweets",
    name: "Min Retweets",
    category: "engagement",
    syntax: "min_retweets:",
    description: "Minimum number of retweets",
    example: "min_retweets:50",
    inputType: "number",
    placeholder: "0",
    tooltip: "Posts must have at least this many retweets",
  },
  {
    id: "minQuotes",
    name: "Min Quotes",
    category: "engagement",
    syntax: "min_quotes:",
    description: "Minimum number of quote tweets",
    example: "min_quotes:5",
    inputType: "number",
    placeholder: "0",
    tooltip: "Posts must have at least this many quote tweets",
  },

  // ==================== DATE/TIME OPERATORS ====================
  {
    id: "since",
    name: "Since Date",
    category: "datetime",
    syntax: "since:",
    description: "Posts after this date",
    example: "since:2024-01-01",
    inputType: "date",
    placeholder: "YYYY-MM-DD",
    tooltip: "Show posts from this date forward",
  },
  {
    id: "until",
    name: "Until Date",
    category: "datetime",
    syntax: "until:",
    description: "Posts before this date",
    example: "until:2024-12-31",
    inputType: "date",
    placeholder: "YYYY-MM-DD",
    tooltip: "Show posts up to this date",
  },
  {
    id: "sinceTime",
    name: "Since Time",
    category: "datetime",
    syntax: "since_time:",
    description: "Posts after this time",
    example: "since_time:1400_01_01_2024",
    inputType: "time",
    placeholder: "HH:MM_MM_DD_YYYY",
    tooltip: "Show posts from this specific time forward",
  },
  {
    id: "untilTime",
    name: "Until Time",
    category: "datetime",
    syntax: "until_time:",
    description: "Posts before this time",
    example: "until_time:1800_01_01_2024",
    inputType: "time",
    placeholder: "HH:MM_MM_DD_YYYY",
    tooltip: "Show posts up to this specific time",
  },

  // ==================== CONTENT FILTERS ====================
  {
    id: "hasImages",
    name: "Has Images",
    category: "content",
    syntax: "filter:images",
    description: "Posts containing images",
    example: "filter:images",
    inputType: "checkbox",
    tooltip: "Only show posts with images",
  },
  {
    id: "hasVideos",
    name: "Has Videos",
    category: "content",
    syntax: "filter:videos",
    description: "Posts containing videos",
    example: "filter:videos",
    inputType: "checkbox",
    tooltip: "Only show posts with videos",
  },
  {
    id: "hasMedia",
    name: "Has Media",
    category: "content",
    syntax: "filter:media",
    description: "Posts containing any media",
    example: "filter:media",
    inputType: "checkbox",
    tooltip: "Only show posts with images or videos",
  },
  {
    id: "hasLinks",
    name: "Has Links",
    category: "content",
    syntax: "filter:links",
    description: "Posts containing URLs",
    example: "filter:links",
    inputType: "checkbox",
    tooltip: "Only show posts with URLs",
  },
  {
    id: "url",
    name: "Specific URL",
    category: "content",
    syntax: "url:",
    description: "Posts with specific URL",
    example: 'url:"developer.x.com"',
    inputType: "text",
    placeholder: "Enter URL...",
    tooltip: "Match posts containing this specific URL",
  },
  {
    id: "hasPolls",
    name: "Has Polls",
    category: "content",
    syntax: "filter:polls",
    description: "Posts containing polls",
    example: "filter:polls",
    inputType: "checkbox",
    tooltip: "Only show posts with polls",
  },
  {
    id: "isVerified",
    name: "Verified Users Only",
    category: "content",
    syntax: "filter:verified",
    description: "Posts from verified accounts",
    example: "filter:verified",
    inputType: "checkbox",
    tooltip: "Only show posts from verified accounts",
  },
  {
    id: "isRetweet",
    name: "Is Retweet",
    category: "content",
    syntax: "filter:retweets",
    description: "Only retweets",
    example: "filter:retweets",
    inputType: "checkbox",
    tooltip: "Only show retweets",
  },
  {
    id: "isQuote",
    name: "Is Quote Tweet",
    category: "content",
    syntax: "filter:quote",
    description: "Only quote tweets",
    example: "filter:quote",
    inputType: "checkbox",
    tooltip: "Only show quote tweets",
  },
  {
    id: "isReply",
    name: "Is Reply",
    category: "content",
    syntax: "filter:replies",
    description: "Only replies",
    example: "filter:replies",
    inputType: "checkbox",
    tooltip: "Only show replies",
  },
  {
    id: "hasEngagement",
    name: "Has Engagement",
    category: "content",
    syntax: "filter:has_engagement",
    description: "Posts with any engagement",
    example: "filter:has_engagement",
    inputType: "checkbox",
    tooltip: "Only show posts with likes, retweets, or replies",
  },
  {
    id: "safeSearch",
    name: "Safe Search",
    category: "content",
    syntax: "filter:safe",
    description: "Filter sensitive content",
    example: "filter:safe",
    inputType: "checkbox",
    tooltip: "Filter out potentially sensitive content",
  },
  {
    id: "excludeRetweets",
    name: "Exclude Retweets",
    category: "content",
    syntax: "-filter:retweets",
    description: "Exclude retweets",
    example: "-filter:retweets",
    inputType: "checkbox",
    tooltip: "Hide retweets from results",
  },
  {
    id: "excludeReplies",
    name: "Exclude Replies",
    category: "content",
    syntax: "-filter:replies",
    description: "Exclude replies",
    example: "-filter:replies",
    inputType: "checkbox",
    tooltip: "Hide replies from results",
  },

  // ==================== LOCATION OPERATORS ====================
  {
    id: "near",
    name: "Near Location",
    category: "location",
    syntax: "near:",
    description: "Posts near this location",
    example: 'near:"New York"',
    inputType: "text",
    placeholder: "Enter location...",
    tooltip: "Posts near this geographic location",
  },
  {
    id: "within",
    name: "Within Radius",
    category: "location",
    syntax: "within:",
    description: "Radius from location",
    example: "within:15mi",
    inputType: "text",
    placeholder: "e.g., 15mi or 10km",
    tooltip: "Distance radius (use with near:)",
  },
  {
    id: "geocode",
    name: "Geocode",
    category: "location",
    syntax: "geocode:",
    description: "Lat,Long,Radius",
    example: "geocode:37.781157,-122.398720,1mi",
    inputType: "text",
    placeholder: "lat,long,radius",
    tooltip: "Search within radius of coordinates",
  },
  {
    id: "place",
    name: "Place",
    category: "location",
    syntax: "place:",
    description: "Tagged location place",
    example: "place:London",
    inputType: "text",
    placeholder: "Enter place name...",
    tooltip: "Posts tagged with this place",
  },
  {
    id: "placeCountry",
    name: "Place Country",
    category: "location",
    syntax: "place_country:",
    description: "Country code (ISO 3166-1 alpha-2)",
    example: "place_country:US",
    inputType: "select",
    placeholder: "Select country...",
    tooltip: "Posts from this country",
    options: [
      { label: "United States (US)", value: "US" },
      { label: "United Kingdom (GB)", value: "GB" },
      { label: "Canada (CA)", value: "CA" },
      { label: "Australia (AU)", value: "AU" },
      { label: "Germany (DE)", value: "DE" },
      { label: "France (FR)", value: "FR" },
      { label: "Japan (JP)", value: "JP" },
      { label: "India (IN)", value: "IN" },
      { label: "Brazil (BR)", value: "BR" },
      { label: "Mexico (MX)", value: "MX" },
    ],
  },
  {
    id: "pointRadius",
    name: "Point Radius",
    category: "location",
    syntax: "point_radius:",
    description: "Longitude Latitude Radius",
    example: "point_radius:[-122.40 37.78 25.0km]",
    inputType: "text",
    placeholder: "[long lat radius]",
    tooltip: "Circle defined by center point and radius",
  },
  {
    id: "boundingBox",
    name: "Bounding Box",
    category: "location",
    syntax: "bounding_box:",
    description: "Geographic area coordinates",
    example: "bounding_box:[-122.4 37.7 -122.3 37.8]",
    inputType: "text",
    placeholder: "[west south east north]",
    tooltip: "Rectangle area by corner coordinates",
  },

  // ==================== ADVANCED OPERATORS ====================
  {
    id: "language",
    name: "Language",
    category: "advanced",
    syntax: "lang:",
    description: "Post language (ISO 639-1)",
    example: "lang:en",
    inputType: "select",
    placeholder: "Select language...",
    tooltip: "Filter by language",
    options: [
      { label: "English (en)", value: "en" },
      { label: "Spanish (es)", value: "es" },
      { label: "French (fr)", value: "fr" },
      { label: "German (de)", value: "de" },
      { label: "Italian (it)", value: "it" },
      { label: "Portuguese (pt)", value: "pt" },
      { label: "Russian (ru)", value: "ru" },
      { label: "Japanese (ja)", value: "ja" },
      { label: "Korean (ko)", value: "ko" },
      { label: "Chinese (zh)", value: "zh" },
      { label: "Arabic (ar)", value: "ar" },
      { label: "Hindi (hi)", value: "hi" },
    ],
  },
  {
    id: "source",
    name: "Source/Device",
    category: "advanced",
    syntax: "source:",
    description: "App/device used to post",
    example: "source:twitter_for_iphone",
    inputType: "select",
    placeholder: "Select source...",
    tooltip: "Filter by posting source",
    options: [
      { label: "Twitter for iPhone", value: "twitter_for_iphone" },
      { label: "Twitter for Android", value: "twitter_for_android" },
      { label: "Twitter Web App", value: "twitter_web_app" },
      { label: "TweetDeck", value: "tweetdeck" },
    ],
  },
  {
    id: "entity",
    name: "Entity",
    category: "advanced",
    syntax: "entity:",
    description: "Match entities (people, places, things)",
    example: 'entity:"Microsoft"',
    inputType: "text",
    placeholder: "Enter entity name...",
    tooltip: "Match posts about this entity",
  },
  {
    id: "context",
    name: "Context Annotation",
    category: "advanced",
    syntax: "context:",
    description: "Context domain ID",
    example: "context:65.123456789",
    inputType: "text",
    placeholder: "domain.entity_id",
    tooltip: "Match posts with specific context annotation",
  },
];

// Group operators by category
export const OPERATORS_BY_CATEGORY = SEARCH_OPERATORS.reduce((acc, op) => {
  if (!acc[op.category]) {
    acc[op.category] = [];
  }
  acc[op.category].push(op);
  return acc;
}, {} as Record<OperatorCategory, SearchOperator[]>);

// Category display names
export const OPERATOR_CATEGORIES: Record<OperatorCategory, string> = {
  basic: "Basic Search",
  account: "Accounts & Users",
  engagement: "Engagement Metrics",
  datetime: "Date & Time",
  content: "Content Filters",
  location: "Location",
  advanced: "Advanced Options",
};

// Example queries
export interface ExampleQuery {
  title: string;
  description: string;
  query: string;
  operators: string[];
}

export const EXAMPLE_QUERIES: ExampleQuery[] = [
  {
    title: "Trending Crypto Tweets",
    description: "Popular crypto tweets from influencers with high engagement",
    query: "(from:MrPicule OR from:GM) AND (crypto OR bitcoin) min_faves:100 -filter:retweets",
    operators: ["from", "orWords", "minFaves", "excludeRetweets"],
  },
  {
    title: "Recent Images from Location",
    description: "Photos posted from London since January 2024",
    query: "filter:images place:London since:2024-01-01",
    operators: ["hasImages", "place", "since"],
  },
  {
    title: "Verified Users Discussion",
    description: "Conversation about AI from verified accounts",
    query: '"artificial intelligence" filter:verified min_replies:10 lang:en',
    operators: ["exactPhrase", "isVerified", "minReplies", "language"],
  },
  {
    title: "High Engagement Tech News",
    description: "Popular tech posts with links and media",
    query: "(tech OR technology OR AI) filter:links filter:media min_retweets:50",
    operators: ["orWords", "hasLinks", "hasMedia", "minRetweets"],
  },
  {
    title: "Local Event Updates",
    description: "Recent posts near specific location",
    query: 'near:"San Francisco" within:25mi since:2024-01-01 filter:has_engagement',
    operators: ["near", "within", "since", "hasEngagement"],
  },
  {
    title: "User Bio Search",
    description: "Find developers in bio working with Python",
    query: 'bio:"python developer" place_country:US',
    operators: ["bio", "placeCountry"],
  },
  {
    title: "Complex Boolean Query",
    description: "Advanced search with multiple conditions",
    query: '(from:elonmusk OR from:BillGates) ("climate change" OR "renewable energy") -politics filter:videos since:2024-01-01',
    operators: ["from", "exactPhrase", "orWords", "notWords", "hasVideos", "since"],
  },
  {
    title: "Viral Content Filter",
    description: "Highly engaged original content",
    query: "min_faves:1000 min_retweets:500 -filter:retweets -filter:replies filter:media",
    operators: ["minFaves", "minRetweets", "excludeRetweets", "excludeReplies", "hasMedia"],
  },
];
