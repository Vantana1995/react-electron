/**
 * Puppeteer Browser Launcher Script
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —ç–∫—Ä–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –±—Ä–∞—É–∑–µ—Ä
 */

const puppeteer = require("puppeteer-extra");
const StealthPlugin = require("puppeteer-extra-plugin-stealth");

// –î–æ–±–∞–≤–ª—è–µ–º stealth –ø–ª–∞–≥–∏–Ω
puppeteer.use(StealthPlugin());

/**
 * –ü–æ–ª—É—á–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —ç–∫—Ä–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {Object} deviceData - –î–∞–Ω–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞
 * @returns {Object} –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —ç–∫—Ä–∞–Ω–∞
 */
function getScreenSettings(deviceData) {
  const screen = deviceData.screen || {};

  return {
    width: screen.width || 1920,
    height: screen.height || 1080,
    deviceScaleFactor: screen.deviceScaleFactor || 1,
    isMobile: screen.isMobile || false,
    hasTouch: screen.hasTouch || false,
    colorDepth: screen.colorDepth || 24,
  };
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å User-Agent –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
 * @param {Object} deviceData - –î–∞–Ω–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞
 * @returns {String} User-Agent —Å—Ç—Ä–æ–∫–∞
 */
function getUserAgent(deviceData) {
  const browser = deviceData.browser || {};
  const os = deviceData.os || {};

  // –ï—Å–ª–∏ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ –±—Ä–∞—É–∑–µ—Ä–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Ö
  if (browser.userAgent) {
    return browser.userAgent;
  }

  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º User-Agent –Ω–∞ –æ—Å–Ω–æ–≤–µ OS
  const osName = os.platform || "Windows";
  const osVersion = os.version || "10";

  if (osName.toLowerCase().includes("windows")) {
    return `Mozilla/5.0 (Windows NT ${osVersion}; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36`;
  } else if (osName.toLowerCase().includes("mac")) {
    return `Mozilla/5.0 (Macintosh; Intel Mac OS X ${osVersion}) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36`;
  } else if (osName.toLowerCase().includes("linux")) {
    return `Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36`;
  }

  // Fallback
  return `Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36`;
}

/**
 * –ó–∞–ø—É—Å—Ç–∏—Ç—å –±—Ä–∞—É–∑–µ—Ä —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {Object} params - –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—É—Å–∫–∞
 * @param {Object} deviceData - –î–∞–Ω–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
 * @returns {Object} –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—É—Å–∫–∞ –±—Ä–∞—É–∑–µ—Ä–∞
 */
async function launchBrowser(params, deviceData) {
  const { url, wait_for } = params;
  const screenSettings = getScreenSettings(deviceData);
  const userAgent = getUserAgent(deviceData);

  console.log("üöÄ –ó–∞–ø—É—Å–∫ Puppeteer –±—Ä–∞—É–∑–µ—Ä–∞...");
  console.log("üì± –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —ç–∫—Ä–∞–Ω–∞:", screenSettings);
  console.log("üåê User-Agent:", userAgent);

  try {
    // –ó–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
    const browser = await puppeteer.launch({
      headless: false, // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
      defaultViewport: null, // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —ç–∫—Ä–∞–Ω–∞
      args: [
        "--no-sandbox",
        "--disable-setuid-sandbox",
        "--disable-dev-shm-usage",
        "--disable-accelerated-2d-canvas",
        "--no-first-run",
        "--no-zygote",
        "--disable-gpu",
        "--disable-blink-features=AutomationControlled",
        `--window-size=${screenSettings.width},${screenSettings.height}`,
        `--user-agent=${userAgent}`,
      ],
    });

    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    const page = await browser.newPage();

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º viewport
    await page.setViewport({
      width: screenSettings.width,
      height: screenSettings.height,
      deviceScaleFactor: screenSettings.deviceScaleFactor,
      isMobile: screenSettings.isMobile,
      hasTouch: screenSettings.hasTouch,
    });

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º User-Agent
    await page.setUserAgent(userAgent);

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è x.com
    await page.setExtraHTTPHeaders({
      "Accept-Language": "en-US,en;q=0.9",
      "Accept-Encoding": "gzip, deflate, br",
      Accept:
        "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7",
      "Upgrade-Insecure-Requests": "1",
      "Sec-Fetch-Dest": "document",
      "Sec-Fetch-Mode": "navigate",
      "Sec-Fetch-Site": "none",
      "Sec-Fetch-User": "?1",
      "Cache-Control": "max-age=0",
      DNT: "1",
      Connection: "keep-alive",
    });

    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π URL (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é x.com)
    const targetUrl = url || "https://x.com";
    console.log(`üåê –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ URL: ${targetUrl}`);

    await page.goto(targetUrl, {
      waitUntil: "networkidle2",
      timeout: 30000,
    });

    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–ª–∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    const waitSelector = wait_for || '[data-testid="primaryColumn"]';
    console.log(`‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞: ${waitSelector}`);

    try {
      await page.waitForSelector(waitSelector, { timeout: 15000 });
      console.log("‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–µ–Ω");
    } catch (error) {
      console.log("‚ö†Ô∏è –û—Å–Ω–æ–≤–Ω–æ–π —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º...");
    }

    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    const pageInfo = await page.evaluate(() => {
      return {
        title: document.title,
        url: window.location.href,
        viewport: {
          width: window.innerWidth,
          height: window.innerHeight,
        },
        userAgent: navigator.userAgent,
        language: navigator.language,
        platform: navigator.platform,
        cookieEnabled: navigator.cookieEnabled,
        onLine: navigator.onLine,
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è x.com
        isLoggedIn:
          document.querySelector(
            '[data-testid="SideNav_AccountSwitcher_Button"]'
          ) !== null,
        hasPrimaryColumn:
          document.querySelector('[data-testid="primaryColumn"]') !== null,
        hasSidebar:
          document.querySelector('[data-testid="sidebarColumn"]') !== null,
      };
    });

    console.log("‚úÖ –ë—Ä–∞—É–∑–µ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω");
    console.log("üìÑ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ:", pageInfo);

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è x.com
    if (
      pageInfo.url.includes("x.com") ||
      pageInfo.url.includes("twitter.com")
    ) {
      console.log(`üê¶ Twitter/X.com —Å—Ç–∞—Ç—É—Å:`);
      console.log(`   - –ó–∞–≥–æ–ª–æ–≤–æ–∫: ${pageInfo.title}`);
      console.log(`   - URL: ${pageInfo.url}`);
      console.log(`   - –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω: ${pageInfo.isLoggedIn ? "–î–∞" : "–ù–µ—Ç"}`);
      console.log(
        `   - –û—Å–Ω–æ–≤–Ω–∞—è –∫–æ–ª–æ–Ω–∫–∞: ${
          pageInfo.hasPrimaryColumn ? "–ó–∞–≥—Ä—É–∂–µ–Ω–∞" : "–ù–µ –Ω–∞–π–¥–µ–Ω–∞"
        }`
      );
      console.log(
        `   - –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å: ${
          pageInfo.hasSidebar ? "–ó–∞–≥—Ä—É–∂–µ–Ω–∞" : "–ù–µ –Ω–∞–π–¥–µ–Ω–∞"
        }`
      );
    }

    return {
      success: true,
      browser: browser,
      page: page,
      pageInfo: pageInfo,
      screenSettings: screenSettings,
      userAgent: userAgent,
    };
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±—Ä–∞—É–∑–µ—Ä–∞:", error);
    return {
      success: false,
      error: error.message,
    };
  }
}

/**
 * –ó–∞–∫—Ä—ã—Ç—å –±—Ä–∞—É–∑–µ—Ä
 * @param {Object} browser - –û–±—ä–µ–∫—Ç –±—Ä–∞—É–∑–µ—Ä–∞
 */
async function closeBrowser(browser) {
  if (browser) {
    try {
      await browser.close();
      console.log("üîí –ë—Ä–∞—É–∑–µ—Ä –∑–∞–∫—Ä—ã—Ç");
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –±—Ä–∞—É–∑–µ—Ä–∞:", error);
    }
  }
}

/**
 * –í—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
 * @param {Object} page - –û–±—ä–µ–∫—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã
 * @param {String} action - –î–µ–π—Å—Ç–≤–∏–µ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
 * @param {Object} params - –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–µ–π—Å—Ç–≤–∏—è
 */
async function performAction(page, action, params = {}) {
  try {
    switch (action) {
      case "click":
        await page.click(params.selector);
        console.log(`üñ±Ô∏è –ö–ª–∏–∫ –ø–æ —ç–ª–µ–º–µ–Ω—Ç—É: ${params.selector}`);
        break;

      case "type":
        await page.type(params.selector, params.text);
        console.log(`‚å®Ô∏è –í–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ –≤ —ç–ª–µ–º–µ–Ω—Ç: ${params.selector}`);
        break;

      case "wait":
        await page.waitForSelector(params.selector, {
          timeout: params.timeout || 10000,
        });
        console.log(`‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞: ${params.selector}`);
        break;

      case "screenshot":
        const screenshot = await page.screenshot({
          fullPage: params.fullPage || false,
          path: params.path || null,
        });
        console.log("üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–¥–µ–ª–∞–Ω");
        return screenshot;

      case "evaluate":
        const result = await page.evaluate(params.function);
        console.log("üîç –í—ã–ø–æ–ª–Ω–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ");
        return result;

      default:
        throw new Error(`–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ: ${action}`);
    }

    return { success: true };
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è ${action}:`, error);
    return { success: false, error: error.message };
  }
}

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞
async function executeScript(params, deviceData) {
  try {
    console.log("üöÄ Starting Puppeteer script execution...");
    console.log("üìã Parameters:", params);
    console.log("üì± Device data keys:", Object.keys(deviceData));

    // –ó–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
    const result = await launchBrowser(params, deviceData);

    if (result.success) {
      console.log("‚úÖ Puppeteer script executed successfully");
      return {
        success: true,
        message: "Puppeteer browser launched successfully",
        pageInfo: result.pageInfo,
        screenSettings: result.screenSettings,
        userAgent: result.userAgent,
        browser: "Puppeteer browser instance created",
      };
    } else {
      console.log("‚ùå Puppeteer script execution failed:", result.error);
      return {
        success: false,
        message: "Failed to launch Puppeteer browser",
        error: result.error,
      };
    }
  } catch (error) {
    console.error("‚ùå Script execution error:", error);
    return {
      success: false,
      message: "Script execution failed",
      error: error.message,
    };
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≥–ª–∞–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –∫–∞–∫ entry point
module.exports = executeScript;

// –¢–∞–∫–∂–µ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
module.exports.launchBrowser = launchBrowser;
module.exports.closeBrowser = closeBrowser;
module.exports.performAction = performAction;
module.exports.getScreenSettings = getScreenSettings;
module.exports.getUserAgent = getUserAgent;
